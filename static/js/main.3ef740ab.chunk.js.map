{"version":3,"sources":["hooks/useAuth.ts","hooks/useHTTP.ts","components/LinksList.tsx","components/Loader.tsx","context/AuthContext.tsx","pages/LinksPage.tsx","components/Input.tsx","pages/CreatePage.tsx","components/LinkCard.tsx","pages/DetailPage.tsx","pages/AuthPage.tsx","hooks/index.ts","hooks/useMessage.ts","hooks/useRoutes.tsx","components/Navbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["storageName","useHTTP","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","a","fetch","response","json","data","ok","Error","message","clearError","LinksList","links","length","className","map","link","index","from","to","_id","React","memo","Loader","style","display","justifyContent","paddingTop","AuthContext","createContext","token","userId","login","jwtToken","id","logout","isAuthenticated","LinksPage","useContext","setLinks","useEffect","Authorization","fetched","console","Fragment","Input","label","htmlFor","type","name","value","onChangeHandler","keyPressHandler","color","onChange","onKeyPress","CreatePage","history","useHistory","auth","setLink","pressHandler","event","key","JSON","stringify","path","push","window","M","updateTextFields","padding","target","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","fetchedLink","AuthPage","hooks","useMessage","email","password","form","setForm","changeHandler","tryAuth","action","registerHandler","loginHandler","marginRight","onClick","disabled","useAuth","ready","setReady","setToken","setUserId","localStorage","setItem","logoutHandler","removeItem","userData","getItem","parse","text","toast","html","useRoutes","exact","Navbar","preventDefault","App","routes","provide","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ef740ab.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport type setUserData = (jwtToken: string, id: string) => void;\r\nexport type clearUserData = () => void;\r\n\r\nexport function useAuth() {\r\n  const [ready, setReady] = useState(false);\r\n  const [token, setToken] = useState(\"\");\r\n  const [userId, setUserId] = useState(\"\");\r\n\r\n  const loginHandler: setUserData = (jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n\r\n    const data = JSON.stringify({ token: jwtToken, userId: id });\r\n\r\n    localStorage.setItem(storageName, data);\r\n  };\r\n\r\n  const logoutHandler: clearUserData = () => {\r\n    setToken(\"\");\r\n    setUserId(\"\");\r\n    localStorage.removeItem(storageName);\r\n  };\r\n\r\n  const login = useCallback(loginHandler, [loginHandler]);\r\n  const logout = useCallback(logoutHandler, [logoutHandler]);\r\n\r\n  useEffect(() => {\r\n    const userData = localStorage.getItem(storageName);\r\n\r\n    if (userData) {\r\n      const data = JSON.parse(userData);\r\n\r\n      if (data && data.token) {\r\n        login(data.token, data.userId);\r\n      }\r\n    }\r\n\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n}\r\n","import { useCallback, useState } from \"react\";\r\n\r\nexport type httpMethod = \"GET\" | \"POST\" | \"PATCH\" | \"DELETE\";\r\nexport type requestHeaders = Record<string, any>;\r\nexport type requestPayload = string | null;\r\nexport type serverResponse = any;\r\n\r\nexport function useHTTP() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<boolean | null>(null);\r\n\r\n  const request = useCallback(async function fetcher<\r\n    U extends RequestInfo,\r\n    M extends RequestInit[\"method\"],\r\n    B extends RequestInit[\"body\"],\r\n    H extends RequestInit[\"headers\"],\r\n    R\r\n  >(url: U, method: M, body?: B, headers?: H): Promise<R> {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(url, { method, body, headers });\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        throw new Error(data.message || \"Failed to fetch\");\r\n      }\r\n\r\n      setLoading(false);\r\n\r\n      return data;\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setError(error.message);\r\n      throw error;\r\n    }\r\n  },\r\n  []);\r\n  // const request = useCallback(fetcher, [fetcher]);\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    request,\r\n    clearError,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CustomLink } from \"../types\";\r\n\r\nconst LinksList: React.FC<{ links: CustomLink[] }> = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">Empty list ¯\\_(ツ)_/¯</p>;\r\n  }\r\n\r\n  return (\r\n    <table className=\"highlight\">\r\n      <thead>\r\n        <tr>\r\n          <th>#</th>\r\n          <th>Original link</th>\r\n          <th>Cut link</th>\r\n          <th>Open</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {links.map((link, index) => (\r\n          <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{link.from}</td>\r\n            <td>{link.to}</td>\r\n            <td>\r\n              <Link to={`/detail/${link._id}`}>Open</Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default React.memo(LinksList);\r\n","import React from \"react\";\r\n\r\nconst Loader = () => (\r\n  <div\r\n    className=\"preloader-wrapper big active\"\r\n    style={{\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      paddingTop: \"2rem\",\r\n    }}\r\n  >\r\n    <div className=\"spinner-layer spinner-blue-only\">\r\n      <div className=\"circle-clipper left\">\r\n        <div className=\"circle\" />\r\n      </div>\r\n      <div className=\"gap-patch\">\r\n        <div className=\"circle\" />\r\n      </div>\r\n      <div className=\"circle-clipper right\">\r\n        <div className=\"circle\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default React.memo(Loader);\r\n","import { createContext } from \"react\";\r\nimport { clearUserData, setUserData } from \"../hooks/useAuth\";\r\n\r\nconst loginNoop: setUserData = (jwtToken, id) => {}\r\nconst logoutNoop: clearUserData = () => {};\r\n\r\nexport const AuthContext = createContext({\r\n  token: \"\",\r\n  userId: \"\",\r\n  login: loginNoop,\r\n  logout: logoutNoop,\r\n  isAuthenticated: false,\r\n});\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport LinksList from \"../components/LinksList\";\r\nimport Loader from \"../components/Loader\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport {\r\n  useHTTP,\r\n  httpMethod,\r\n  requestHeaders,\r\n  requestPayload,\r\n  serverResponse,\r\n} from \"../hooks/useHTTP\";\r\n\r\nconst LinksPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const [links, setLinks] = useState([]);\r\n  const { loading, request } = useHTTP();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const fetched = await request<\r\n          string,\r\n          httpMethod,\r\n          requestPayload,\r\n          requestHeaders,\r\n          serverResponse\r\n        >(\"/api/link\", \"GET\", null, {\r\n          Authorization: `Bearer ${token}`,\r\n        });\r\n\r\n        setLinks(fetched);\r\n      } catch (error) {\r\n        console.error();\r\n      }\r\n    })();\r\n  }, [request, token]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>{!loading && <LinksList links={links} />}</React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(LinksPage);\r\n","import React from \"react\";\r\n\r\ninterface InputProps {\r\n  label: string;\r\n  htmlFor: string;\r\n  type: string;\r\n  name: string;\r\n  id: string;\r\n  value: string;\r\n  onChangeHandler: React.ChangeEventHandler<any>;\r\n  keyPressHandler?: React.KeyboardEventHandler;\r\n  style?: Record<string, string | number>;\r\n}\r\n\r\nconst Input: React.FC<InputProps> = ({\r\n  label,\r\n  htmlFor,\r\n  type,\r\n  name,\r\n  id,\r\n  value,\r\n  onChangeHandler,\r\n  keyPressHandler,\r\n  style,\r\n}) => (\r\n  <div className=\"input-field\">\r\n    <input\r\n      className=\"yellow-input\"\r\n      type={type}\r\n      name={name}\r\n      id={id}\r\n      value={value}\r\n      style={{ color: \"white\", ...style }}\r\n      onChange={onChangeHandler}\r\n      onKeyPress={keyPressHandler}\r\n    />\r\n    <label htmlFor={htmlFor}>{label}</label>\r\n  </div>\r\n);\r\n\r\nexport default React.memo(Input);\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Input from \"../components/Input\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport {\r\n  httpMethod,\r\n  requestHeaders,\r\n  requestPayload,\r\n  serverResponse,\r\n  useHTTP,\r\n} from \"../hooks/useHTTP\";\r\n\r\nconst CreatePage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const { request } = useHTTP();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const changeHandler: React.ChangeEventHandler<any> = (event) => {\r\n    setLink(event.target.value);\r\n  };\r\n\r\n  const pressHandler: React.KeyboardEventHandler = async (event) => {\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        const data = await request<\r\n          string,\r\n          httpMethod,\r\n          requestPayload,\r\n          requestHeaders,\r\n          serverResponse\r\n        >(\"/api/link/generate\", \"POST\", JSON.stringify({ from: link }), {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${auth.token}`,\r\n        });\r\n        const path = \"/detail/\" + data.link._id;\r\n        history.push(path);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window?.M?.updateTextFields();\r\n  });\r\n\r\n  return (\r\n    <div style={{ paddingTop: \"2rem\" }}>\r\n      <div\r\n        className=\"col s8 offset-s2 blue darken-1\"\r\n        style={{ padding: \"2rem\" }}\r\n      >\r\n        <Input\r\n          label=\"Insert a link\"\r\n          htmlFor=\"link\"\r\n          type=\"text\"\r\n          name=\"Link\"\r\n          id=\"link\"\r\n          value={link}\r\n          onChangeHandler={changeHandler}\r\n          keyPressHandler={pressHandler}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CreatePage);\r\n","import React from \"react\";\r\nimport { CustomLink } from \"../types\";\r\n\r\nconst LinkCard: React.FC<{ link: CustomLink }> = ({ link }) => {\r\n  return (\r\n    <>\r\n      <h2>Link</h2>\r\n      <p>\r\n        Your link:{\" \"}\r\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.to}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        From:{\" \"}\r\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.from}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Clicks: <b>{link.clicks}</b>\r\n      </p>\r\n      <p>\r\n        Created: <b>{new Date(link.date).toLocaleDateString()}</b>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinkCard;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LinkCard from \"../components/LinkCard\";\r\nimport Loader from \"../components/Loader\";\r\nimport { CustomLink } from \"../types\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport {\r\n  useHTTP,\r\n  httpMethod,\r\n  requestHeaders,\r\n  requestPayload,\r\n  serverResponse,\r\n} from \"../hooks/useHTTP\";\r\n\r\nconst DetailPage = () => {\r\n  const { token } = useContext(AuthContext);\r\n  const { request, loading } = useHTTP();\r\n  const [link, setLink] = useState({} as CustomLink);\r\n  const linkId = useParams<{ id: string }>().id;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const fetchedLink = await request<\r\n          string,\r\n          httpMethod,\r\n          requestPayload,\r\n          requestHeaders,\r\n          serverResponse\r\n        >(`/api/link/${linkId}`, \"GET\", null, {\r\n          Authorization: `Bearer ${token}`,\r\n        });\r\n\r\n        setLink(fetchedLink);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    })();\r\n  }, [token, linkId, request]);\r\n\r\n  if (loading) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {!loading && link && <LinkCard link={link} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport Input from \"../components/Input\";\r\nimport hooks from \"../hooks\";\r\nimport {\r\n  httpMethod,\r\n  requestHeaders,\r\n  requestPayload,\r\n  serverResponse,\r\n} from \"../hooks/useHTTP\";\r\n\r\nconst AuthPage = () => {\r\n  const { useHTTP, useMessage } = hooks;\r\n\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n  const [form, setForm] = useState({ email: \"\", password: \"\" });\r\n\r\n  const { loading, error, request, clearError } = useHTTP();\r\n\r\n  const changeHandler: React.ChangeEventHandler<any> = (event) => {\r\n    setForm({ ...form, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearError();\r\n  }, [error, message, clearError]);\r\n\r\n  useEffect(() => {\r\n    window?.M?.updateTextFields();\r\n  });\r\n\r\n  const tryAuth = async (action: \"register\" | \"login\") => {\r\n    const data = await request<\r\n      string,\r\n      httpMethod,\r\n      requestPayload,\r\n      requestHeaders,\r\n      serverResponse\r\n    >(`/api/auth/${action}`, \"POST\", JSON.stringify({ ...form }), {\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    return data;\r\n  };\r\n\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await tryAuth(\"register\");\r\n\r\n      message(data.message);\r\n    } catch (error) {}\r\n  };\r\n\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await tryAuth(\"login\");\r\n\r\n      auth.login(data.token, data.userId);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>Link Cutter</h1>\r\n        <div className=\"card blue darken-1\">\r\n          <div className=\"card-content white-text\">\r\n            <span className=\"card-title\">Authentication</span>\r\n            <div>\r\n              <Input\r\n                label=\"Email\"\r\n                htmlFor=\"email\"\r\n                type=\"text\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                value={form.email}\r\n                onChangeHandler={changeHandler}\r\n              />\r\n              <Input\r\n                label=\"Password\"\r\n                htmlFor=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                id=\"password\"\r\n                value={form.password}\r\n                onChangeHandler={changeHandler}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn lime accent-4 black-text\"\r\n              style={{ marginRight: 10 }}\r\n              onClick={loginHandler}\r\n              disabled={loading}\r\n            >\r\n              Sign in\r\n            </button>\r\n            <button\r\n              className=\"btn grey lighten-1 black-text\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Sign up\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AuthPage);\r\n","import { useAuth } from \"./useAuth\";\r\nimport { useHTTP } from \"./useHTTP\";\r\nimport { useMessage } from \"./useMessage\";\r\nimport { useRoutes } from \"./useRoutes\";\r\n\r\nconst hooks = { useAuth, useHTTP, useMessage, useRoutes };\r\n\r\nexport default hooks;\r\n","import { useCallback } from \"react\";\r\n\r\nexport function useMessage() {\r\n  return useCallback((text) => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport LinksPage from \"../pages/LinksPage\";\r\nimport CreatePage from \"../pages/CreatePage\";\r\nimport DetailPage from \"../pages/DetailPage\";\r\nimport AuthPage from \"../pages/AuthPage\";\r\n\r\nexport function useRoutes(isAuthenticated: boolean) {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nconst Navbar = () => {\r\n  const auth = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const logoutHandler = (event: React.SyntheticEvent<any, Event>) => {\r\n    event?.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"blue darken-1\" style={{ padding: \"0 2rem\" }}>\r\n      <div className=\"nav-wrapper\">\r\n        <span className=\"brand-logo\">Link Cutter</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/create\">Create</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/links\">Links</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Logout\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default React.memo(Navbar);\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"materialize-css\";\r\nimport hooks from \"./hooks\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Loader from \"./components/Loader\";\r\n\r\nconst { useAuth, useRoutes } = hooks;\r\n\r\nfunction App() {\r\n  const { login, logout, token, userId, ready } = useAuth();\r\n\r\n  const isAuthenticated = !!token;\r\n  const routes = useRoutes(isAuthenticated);\r\n\r\n  if (!ready) {\r\n    return <Loader />;\r\n  }\r\n\r\n  const provide = {\r\n    token,\r\n    userId,\r\n    login,\r\n    logout,\r\n    isAuthenticated,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={provide}>\r\n      <BrowserRouter>\r\n        {isAuthenticated && <Navbar />}\r\n        <div className=\"container\">{routes}</div>\r\n      </BrowserRouter>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    M?: Record<string, any>;\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}